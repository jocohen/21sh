- Set Terminal Window to canonique mode
- read
{
	-si touches fonctionnels les applique
	-\n
	{
		- while (check "" et '')
		-bufferise tout caractere en enlevant tab et espace
		-parsing des commandes
	}

}


termcaps :
		   -check size window pour savoir si cursor ou buffer
		   arrive a la fin de la ligne pour pouvoir gerer la
		   position
		   -ctrl up et ctrl down
		   -si getflag(co) > a tout les print char

		   activate copy mode th


ctrl C =
		 -read a file where pid of actual process to be killed
		 when ctrl c pressed
		 -est ce quil faudrait pas fork au niveau du start
		 prompter et stand by le father et
		 kill le fils quand ctrl c


history =
		  list double par ordre de old a new
			lors de mov hist input.s[input.x] = 0

	   des quon start history on reactualise notre cmd  dans
	   lst d'history si cette derneire est non nul

	   clean les sortie et ecrire a la place

	   si tu history quand tu as une cmd de base ecrite en fonction de ton curseur :
	       	-  1 pointeur static qui cree une liste qui ne contient que tous les elem qui sont en correspondance avec la cmd
	   		on cherche les cmds les plus frequetente qui ont la meme base
			- apres faut check si tu modif un truc via une fct qui a une static char[2] qui a les 2 derniers touches touche
	   		on cancel la static char qui keep la cmd de base de recherche mais si 0 modif on keep de chercher avec
	   		sa comme base

		need to fix le realocc quand on la cmd depasse input
		finish le check history qui delete les content null et faut apres faire un truc qui rewrite ce qui est pas dans le doc et faire un init enfaite a chaque fin d'entree
